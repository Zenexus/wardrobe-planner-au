/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { forwardRef } from "react";
import { useGLTF } from "@react-three/drei";
import { ThreeElements } from "@react-three/fiber";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Shelf_2: THREE.Mesh;
    Shelf_1: THREE.Mesh;
    Shelf: THREE.Mesh;
    ["Drawer_Glass_1-Gloss_White"]: THREE.Mesh;
    ["Drawer_Glass_1-Glass"]: THREE.Mesh;
    ["Drawer_Glass_2-Gloss_White"]: THREE.Mesh;
    ["Drawer_Glass_2-Glass"]: THREE.Mesh;
    ["Drawer_Glass_3-Gloss_White"]: THREE.Mesh;
    ["Drawer_Glass_3-Glass"]: THREE.Mesh;
    ["Drawer_Glass_4-Gloss_White"]: THREE.Mesh;
    ["Drawer_Glass_4-Glass"]: THREE.Mesh;
    Wardrobe_Base: THREE.Mesh;
    Clothing: THREE.Mesh;
    Clothing1: THREE.Mesh;
    Clothing2: THREE.Mesh;
    Clothing3: THREE.Mesh;
    Tray: THREE.Mesh;
    ["Bottle1-Base_grey"]: THREE.Mesh;
    ["Bottle1-Base_gold"]: THREE.Mesh;
    ["Bottle-Base_Blue"]: THREE.Mesh;
    ["Bottle-Base_gold"]: THREE.Mesh;
    ["Bottle2-Metal"]: THREE.Mesh;
    ["Bottle2-Base_gold"]: THREE.Mesh;
    Box: THREE.Mesh;
  };
  materials: {
    ["Gloss White"]: THREE.MeshStandardMaterial;
    Glass: THREE.MeshStandardMaterial;
    Clothing: THREE.MeshStandardMaterial;
    Clothing_3: THREE.MeshStandardMaterial;
    Clothing_2: THREE.MeshStandardMaterial;
    Base_grey: THREE.MeshStandardMaterial;
    Base_gold: THREE.MeshStandardMaterial;
    Base_Blue: THREE.MeshStandardMaterial;
    Metal: THREE.MeshStandardMaterial;
  };
};

export const Model = forwardRef<
  THREE.Group,
  ThreeElements["group"] & { onClick?: (event: any) => void }
>((props, ref) => {
  const { nodes, materials } = useGLTF(
    "/models/01685_Bundle_C.gltf"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null} onClick={props.onClick}>
      <mesh
        ref={ref}
        castShadow
        receiveShadow
        geometry={nodes.Shelf_2.geometry}
        material={materials["Gloss White"]}
        position={[0.016, 0.986, 0.011]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Shelf_1.geometry}
        material={materials["Gloss White"]}
        position={[0.016, 1.367, 0.011]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Shelf.geometry}
        material={materials["Gloss White"]}
        position={[0.016, 1.703, 0.011]}
      />
      <group position={[-0.001, 0.544, -0.083]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Drawer_Glass_1-Gloss_White"].geometry}
          material={materials["Gloss White"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Drawer_Glass_1-Glass"].geometry}
          material={materials.Glass}
        />
      </group>
      <group position={[-0.001, 0.765, -0.083]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Drawer_Glass_2-Gloss_White"].geometry}
          material={materials["Gloss White"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Drawer_Glass_2-Glass"].geometry}
          material={materials.Glass}
        />
      </group>
      <group position={[-0.001, 0.102, -0.083]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Drawer_Glass_3-Gloss_White"].geometry}
          material={materials["Gloss White"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Drawer_Glass_3-Glass"].geometry}
          material={materials.Glass}
        />
      </group>
      <group position={[-0.001, 0.323, -0.083]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Drawer_Glass_4-Gloss_White"].geometry}
          material={materials["Gloss White"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Drawer_Glass_4-Glass"].geometry}
          material={materials.Glass}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Wardrobe_Base.geometry}
        material={materials["Gloss White"]}
        position={[0.016, 0.989, 0.011]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Clothing.geometry}
        material={materials.Clothing}
        position={[-0.009, 1.065, 0.011]}
        rotation={[0, -1.571, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Clothing1.geometry}
        material={materials.Clothing_3}
        position={[-0.078, 0.832, 0.011]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Clothing2.geometry}
        material={materials.Clothing_2}
        position={[0.144, 1.422, 0.011]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Clothing3.geometry}
        material={materials.Clothing_3}
        position={[0.013, 0.171, 0.011]}
        rotation={[0, 1.571, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Tray.geometry}
        material={materials.Base_grey}
        position={[-0.015, 0.363, 0.034]}
      />
      <group position={[-0.086, 0.409, 0.011]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Bottle1-Base_grey"].geometry}
          material={materials.Base_grey}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Bottle1-Base_gold"].geometry}
          material={materials.Base_gold}
        />
      </group>
      <group position={[-0.043, 0.409, -0.029]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Bottle-Base_Blue"].geometry}
          material={materials.Base_Blue}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Bottle-Base_gold"].geometry}
          material={materials.Base_gold}
        />
      </group>
      <group position={[0.045, 0.409, 0.002]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Bottle2-Metal"].geometry}
          material={materials.Metal}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Bottle2-Base_gold"].geometry}
          material={materials.Base_gold}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Box.geometry}
        material={materials.Base_grey}
        position={[0.096, 0.376, 0]}
      />
    </group>
  );
});

Model.displayName = "Model";

useGLTF.preload("/models/01685_Bundle_C.gltf");
