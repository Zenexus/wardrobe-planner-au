/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// 01684 is Wardrobe 3 Shelf & 4 Drawer Unit White

import { useGLTF } from "@react-three/drei";
import { ThreeElements } from "@react-three/fiber";
import { GLTF } from "three-stdlib";
import * as THREE from "three";
import { forwardRef } from "react";

type GLTFResult = GLTF & {
  nodes: {
    "Null1-Gloss_White": THREE.Mesh;
    "Null1-MDF": THREE.Mesh;
  };
  materials: {
    "Gloss White": THREE.MeshStandardMaterial;
    MDF: THREE.MeshStandardMaterial;
  };
};

// Export the component with forwardRef to allow parent components to access the mesh
export const ClassicWardrobe = forwardRef<
  THREE.Mesh,
  ThreeElements["group"] & { onClick?: (event: any) => void }
>((props, ref) => {
  const { nodes, materials } = useGLTF(
    "/models/01684.gltf"
  ) as unknown as GLTFResult;

  return (
    <group {...props} dispose={null} onClick={props.onClick}>
      <group position={[0.016, 0.82, 0.011]}>
        <mesh
          ref={ref}
          castShadow
          receiveShadow
          geometry={nodes["Null1-Gloss_White"].geometry}
          material={materials["Gloss White"]}
          onClick={props.onClick}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Null1-MDF"].geometry}
          material={materials.MDF}
          onClick={props.onClick}
        />
      </group>
    </group>
  );
});

ClassicWardrobe.displayName = "ClassicWardrobe";

useGLTF.preload("/models/01684.gltf");

// Keep backward compatibility
export const Model = ClassicWardrobe;
