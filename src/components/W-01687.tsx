/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// 01687 is L shape
import { useGLTF } from "@react-three/drei";
import { ThreeElements } from "@react-three/fiber";
import { GLTF } from "three-stdlib";
import * as THREE from "three";
import { forwardRef } from "react";

type GLTFResult = GLTF & {
  nodes: {
    "01687": THREE.Mesh;
  };
  materials: {
    "Gloss White": THREE.MeshStandardMaterial;
  };
};

// Export the component with forwardRef to allow parent components to access the mesh
export const ModernWardrobe = forwardRef<
  THREE.Mesh,
  ThreeElements["group"] & { onClick?: (event: any) => void }
>((props, ref) => {
  const { nodes, materials } = useGLTF(
    "/models/01687.gltf"
  ) as unknown as GLTFResult;

  // Simplified: Use consistent positioning like other wardrobe models
  // The GLTF model has a built-in Y offset of approximately 0.989 to sit properly on the floor
  const modelBuiltInYPosition = 0.9;

  return (
    <group {...props} dispose={null} onClick={props.onClick}>
      <group position={[0, modelBuiltInYPosition, 0]}>
        <mesh
          ref={ref}
          castShadow
          receiveShadow
          geometry={nodes["01687"].geometry}
          material={materials["Gloss White"]}
          onClick={props.onClick}
          position={[0, 0, 0]} // Ensure the mesh is at the center of the group
        />
      </group>
    </group>
  );
});

ModernWardrobe.displayName = "ModernWardrobe";

useGLTF.preload("/models/01687.gltf");

// Keep backward compatibility
export const Model = ModernWardrobe;
