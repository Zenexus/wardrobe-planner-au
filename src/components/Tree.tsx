/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["Tree_green01_Cube007-Mesh"]: THREE.Mesh;
    ["Tree_green01_Cube007-Mesh_1"]: THREE.Mesh;
  };
  materials: {
    Wood_Tree01: THREE.MeshStandardMaterial;
    GreenLeaf_Tree01: THREE.MeshStandardMaterial;
  };
};

export function Model(props: React.ComponentProps<"group">) {
  const { nodes, materials } = useGLTF(
    "/models/low-poly/Tree.glb"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["Tree_green01_Cube007-Mesh"].geometry}
        material={materials.Wood_Tree01}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["Tree_green01_Cube007-Mesh_1"].geometry}
        material={materials.GreenLeaf_Tree01}
      />
    </group>
  );
}

useGLTF.preload("/models/low-poly/Tree.glb");
