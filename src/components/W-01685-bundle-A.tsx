/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { forwardRef } from "react";
import { useGLTF } from "@react-three/drei";
import { ThreeElements } from "@react-three/fiber";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["Shoe_Rack2-White_Mesh"]: THREE.Mesh;
    ["Shoe_Rack2-Gloss_White"]: THREE.Mesh;
    ["Shoe_Rack1-White_Mesh"]: THREE.Mesh;
    ["Shoe_Rack1-Gloss_White"]: THREE.Mesh;
    ["Shoes_1-Shoes_1"]: THREE.Mesh;
    ["Shoe_2-Shoes_2"]: THREE.Mesh;
    ["Shoe_3-Shoes_3"]: THREE.Mesh;
    ["Shoe_4-Shoes_4"]: THREE.Mesh;
    Metal_Hanger_Bar: THREE.Mesh;
    Shelf: THREE.Mesh;
    Shelf_1: THREE.Mesh;
    Wardrobe_Base: THREE.Mesh;
  };
  materials: {
    ["White Mesh"]: THREE.MeshStandardMaterial;
    ["Gloss White"]: THREE.MeshStandardMaterial;
    Shoes_1: THREE.MeshStandardMaterial;
    Shoes_2: THREE.MeshStandardMaterial;
    Shoes_3: THREE.MeshStandardMaterial;
    Shoes_4: THREE.MeshStandardMaterial;
    Metal: THREE.MeshStandardMaterial;
  };
};

export const Model = forwardRef<
  THREE.Group,
  ThreeElements["group"] & { onClick?: (event: any) => void }
>((props, ref) => {
  const { nodes, materials } = useGLTF(
    "/models/01685_Bundle_A.gltf"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null} ref={ref} onClick={props.onClick}>
      <group position={[-0.048, 0.399, 0]} rotation={[-Math.PI, 0, -Math.PI]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Shoe_Rack2-White_Mesh"].geometry}
          material={materials["White Mesh"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Shoe_Rack2-Gloss_White"].geometry}
          material={materials["Gloss White"]}
        />
      </group>
      <group position={[-0.048, 0.186, 0]} rotation={[-Math.PI, 0, -Math.PI]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Shoe_Rack1-White_Mesh"].geometry}
          material={materials["White Mesh"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Shoe_Rack1-Gloss_White"].geometry}
          material={materials["Gloss White"]}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Metal_Hanger_Bar.geometry}
        material={materials.Metal}
        position={[-0.058, 1.618, 0]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Shelf.geometry}
        material={materials["Gloss White"]}
        position={[-0.058, 1.708, 0]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Shelf_1.geometry}
        material={materials["Gloss White"]}
        position={[-0.058, 0.565, 0]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Wardrobe_Base.geometry}
        material={materials["Gloss White"]}
        position={[-0.058, 0.989, 0]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["Shoes_1-Shoes_1"].geometry}
        material={materials.Shoes_1}
        position={[0.072, 0.36, -0.098]}
        rotation={[-2.793, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["Shoe_2-Shoes_2"].geometry}
        material={materials.Shoes_2}
        position={[-0.206, 0.149, -0.106]}
        rotation={[-2.793, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["Shoe_3-Shoes_3"].geometry}
        material={materials.Shoes_3}
        position={[0.079, 0.133, -0.068]}
        rotation={[-2.793, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["Shoe_4-Shoes_4"].geometry}
        material={materials.Shoes_4}
        position={[-0.178, 0.359, -0.105]}
        rotation={[-2.722, 0, -Math.PI]}
      />
    </group>
  );
});

Model.displayName = "Model";

useGLTF.preload("/models/01685_Bundle_A.gltf");
